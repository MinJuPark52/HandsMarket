{"ast":null,"code":"import _classCallCheck from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _classPrivateFieldInitSpec from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _classPrivateFieldSet from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nvar _focused, _cleanup, _setup;\n// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = (_focused = /*#__PURE__*/new WeakMap(), _cleanup = /*#__PURE__*/new WeakMap(), _setup = /*#__PURE__*/new WeakMap(), /*#__PURE__*/function (_Subscribable) {\n  function FocusManager() {\n    var _this;\n    _classCallCheck(this, FocusManager);\n    _this = _callSuper(this, FocusManager);\n    _classPrivateFieldInitSpec(_this, _focused, void 0);\n    _classPrivateFieldInitSpec(_this, _cleanup, void 0);\n    _classPrivateFieldInitSpec(_this, _setup, void 0);\n    _classPrivateFieldSet(_setup, _this, function (onFocus) {\n      if (!isServer && window.addEventListener) {\n        var listener = function listener() {\n          return onFocus();\n        };\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return function () {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    });\n    return _this;\n  }\n  _inherits(FocusManager, _Subscribable);\n  return _createClass(FocusManager, [{\n    key: \"onSubscribe\",\n    value: function onSubscribe() {\n      if (!_classPrivateFieldGet(_cleanup, this)) {\n        this.setEventListener(_classPrivateFieldGet(_setup, this));\n      }\n    }\n  }, {\n    key: \"onUnsubscribe\",\n    value: function onUnsubscribe() {\n      if (!this.hasListeners()) {\n        var _classPrivateFieldGet2;\n        (_classPrivateFieldGet2 = _classPrivateFieldGet(_cleanup, this)) === null || _classPrivateFieldGet2 === void 0 || _classPrivateFieldGet2.call(this);\n        _classPrivateFieldSet(_cleanup, this, void 0);\n      }\n    }\n  }, {\n    key: \"setEventListener\",\n    value: function setEventListener(setup) {\n      var _classPrivateFieldGet3,\n        _this2 = this;\n      _classPrivateFieldSet(_setup, this, setup);\n      (_classPrivateFieldGet3 = _classPrivateFieldGet(_cleanup, this)) === null || _classPrivateFieldGet3 === void 0 || _classPrivateFieldGet3.call(this);\n      _classPrivateFieldSet(_cleanup, this, setup(function (focused) {\n        if (typeof focused === \"boolean\") {\n          _this2.setFocused(focused);\n        } else {\n          _this2.onFocus();\n        }\n      }));\n    }\n  }, {\n    key: \"setFocused\",\n    value: function setFocused(focused) {\n      var changed = _classPrivateFieldGet(_focused, this) !== focused;\n      if (changed) {\n        _classPrivateFieldSet(_focused, this, focused);\n        this.onFocus();\n      }\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      var isFocused = this.isFocused();\n      this.listeners.forEach(function (listener) {\n        listener(isFocused);\n      });\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      var _globalThis$document;\n      if (typeof _classPrivateFieldGet(_focused, this) === \"boolean\") {\n        return _classPrivateFieldGet(_focused, this);\n      }\n      return ((_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : _globalThis$document.visibilityState) !== \"hidden\";\n    }\n  }]);\n}(Subscribable));\nvar focusManager = new FocusManager();\nexport { FocusManager, focusManager };","map":{"version":3,"names":["Subscribable","isServer","FocusManager","_focused","WeakMap","_cleanup","_setup","_Subscribable","_this","_classCallCheck","_callSuper","_classPrivateFieldInitSpec","_classPrivateFieldSet","onFocus","window","addEventListener","listener","removeEventListener","_inherits","_createClass","key","value","onSubscribe","_classPrivateFieldGet","setEventListener","onUnsubscribe","hasListeners","_classPrivateFieldGet2","call","setup","_classPrivateFieldGet3","_this2","focused","setFocused","changed","isFocused","listeners","forEach","_globalThis$document","globalThis","document","visibilityState","focusManager"],"sources":["C:\\Users\\als40\\Desktop\\HandsMarket\\node_modules\\@tanstack\\query-core\\src\\focusManager.ts"],"sourcesContent":["import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (focused: boolean) => void\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable<Listener> {\n  #focused?: boolean\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibilitychange\n        window.addEventListener('visibilitychange', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.#focused !== focused\n    if (changed) {\n      this.#focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    const isFocused = this.isFocused()\n    this.listeners.forEach((listener) => {\n      listener(isFocused)\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.#focused === 'boolean') {\n      return this.#focused\n    }\n\n    // document global can be unavailable in react native\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    return globalThis.document?.visibilityState !== 'hidden'\n  }\n}\n\nexport const focusManager = new FocusManager()\n"],"mappings":";;;;;;;;;AAAA,SAASA,YAAA,QAAoB;AAC7B,SAASC,QAAA,QAAgB;AAQlB,IAAMC,YAAA,IAAAC,QAAA,oBAAAC,OAAA,IAAAC,QAAA,oBAAAD,OAAA,IAAAE,MAAA,oBAAAF,OAAA,2BAAAG,aAAA;EAMX,SAAAL,aAAA,EAAc;IAAA,IAAAM,KAAA;IAAAC,eAAA,OAAAP,YAAA;IACZM,KAAA,GAAAE,UAAA,OAAAR,YAAA;IANFS,0BAAA,CAAAH,KAAA,EAAAL,QAAA;IACAQ,0BAAA,CAAAH,KAAA,EAAAH,QAAA;IAEAM,0BAAA,CAAAH,KAAA,EAAAF,MAAA;IAIEM,qBAAA,CAAKN,MAAA,EAAAE,KAAA,EAAS,UAACK,OAAA,EAAY;MAGzB,IAAI,CAACZ,QAAA,IAAYa,MAAA,CAAOC,gBAAA,EAAkB;QACxC,IAAMC,QAAA,GAAW,SAAXA,SAAA;UAAA,OAAiBH,OAAA,CAAQ;QAAA;QAE/BC,MAAA,CAAOC,gBAAA,CAAiB,oBAAoBC,QAAA,EAAU,KAAK;QAE3D,OAAO,YAAM;UAEXF,MAAA,CAAOG,mBAAA,CAAoB,oBAAoBD,QAAQ;QACzD;MACF;MACA;IACF,CAdK;IAcL,OAAAR,KAAA;EACF;EAAAU,SAAA,CAAAhB,YAAA,EAAAK,aAAA;EAAA,OAAAY,YAAA,CAAAjB,YAAA;IAAAkB,GAAA;IAAAC,KAAA,EAEU,SAAAC,YAAA,EAAoB;MAC5B,IAAI,CAACC,qBAAA,CAAKlB,QAAA,EAAL,IAAK,GAAU;QAClB,KAAKmB,gBAAA,CAAiBD,qBAAA,CAAKjB,MAAM,EAAX,IAAK,CAAM;MACnC;IACF;EAAA;IAAAc,GAAA;IAAAC,KAAA,EAEU,SAAAI,cAAA,EAAgB;MACxB,IAAI,CAAC,KAAKC,YAAA,CAAa,GAAG;QAAA,IAAAC,sBAAA;QACxB,CAAAA,sBAAA,GAAAJ,qBAAA,CAAKlB,QAAA,EAAL,IAAK,eAAAsB,sBAAA,eAAAA,sBAAA,CAAAC,IAAA,CAAL;QACAhB,qBAAA,CAAKP,QAAA,EAAL,MAAgB,MAAX;MACP;IACF;EAAA;IAAAe,GAAA;IAAAC,KAAA,EAEA,SAAAG,iBAAiBK,KAAA,EAAsB;MAAA,IAAAC,sBAAA;QAAAC,MAAA;MACrCnB,qBAAA,CAAKN,MAAA,EAAL,MAAcuB,KAAT;MACL,CAAAC,sBAAA,GAAAP,qBAAA,CAAKlB,QAAA,EAAL,IAAK,eAAAyB,sBAAA,eAAAA,sBAAA,CAAAF,IAAA,CAAL;MACAhB,qBAAA,CAAKP,QAAA,EAAL,MAAgBwB,KAAA,CAAM,UAACG,OAAA,EAAY;QACjC,IAAI,OAAOA,OAAA,KAAY,WAAW;UAChCD,MAAA,CAAKE,UAAA,CAAWD,OAAO;QACzB,OAAO;UACLD,MAAA,CAAKlB,OAAA,CAAQ;QACf;MACF,CAAC,CANI;IAOP;EAAA;IAAAO,GAAA;IAAAC,KAAA,EAEA,SAAAY,WAAWD,OAAA,EAAyB;MAClC,IAAME,OAAA,GAAUX,qBAAA,CAAKpB,QAAA,EAAL,IAAK,MAAa6B,OAAA;MAClC,IAAIE,OAAA,EAAS;QACXtB,qBAAA,CAAKT,QAAA,EAAL,MAAgB6B,OAAX;QACL,KAAKnB,OAAA,CAAQ;MACf;IACF;EAAA;IAAAO,GAAA;IAAAC,KAAA,EAEA,SAAAR,QAAA,EAAgB;MACd,IAAMsB,SAAA,GAAY,KAAKA,SAAA,CAAU;MACjC,KAAKC,SAAA,CAAUC,OAAA,CAAQ,UAACrB,QAAA,EAAa;QACnCA,QAAA,CAASmB,SAAS;MACpB,CAAC;IACH;EAAA;IAAAf,GAAA;IAAAC,KAAA,EAEA,SAAAc,UAAA,EAAqB;MAAA,IAAAG,oBAAA;MACnB,IAAI,OAAOf,qBAAA,CAAKpB,QAAA,EAAL,IAAK,MAAa,WAAW;QACtC,OAAOoB,qBAAA,CAAKpB,QAAA,EAAL,IAAK;MACd;MAIA,OAAO,EAAAmC,oBAAA,GAAAC,UAAA,CAAWC,QAAA,cAAAF,oBAAA,uBAAXA,oBAAA,CAAqBG,eAAA,MAAoB;IAClD;EAAA;AAAA,EAzEgCzC,YAAA,EA0ElC;AAEO,IAAM0C,YAAA,GAAe,IAAIxC,YAAA,CAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}