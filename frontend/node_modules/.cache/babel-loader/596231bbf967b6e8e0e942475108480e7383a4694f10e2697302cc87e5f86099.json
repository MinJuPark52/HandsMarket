{"ast":null,"code":"import _objectSpread from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _classPrivateFieldInitSpec from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _classPrivateFieldSet from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nvar _queries;\n// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = (_queries = /*#__PURE__*/new WeakMap(), /*#__PURE__*/function (_Subscribable) {\n  function QueryCache() {\n    var _this;\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, QueryCache);\n    _this = _callSuper(this, QueryCache);\n    _classPrivateFieldInitSpec(_this, _queries, void 0);\n    _this.config = config;\n    _classPrivateFieldSet(_queries, _this, /* @__PURE__ */new Map());\n    return _this;\n  }\n  _inherits(QueryCache, _Subscribable);\n  return _createClass(QueryCache, [{\n    key: \"build\",\n    value: function build(client, options, state) {\n      var _options$queryHash;\n      var queryKey = options.queryKey;\n      var queryHash = (_options$queryHash = options.queryHash) !== null && _options$queryHash !== void 0 ? _options$queryHash : hashQueryKeyByOptions(queryKey, options);\n      var query = this.get(queryHash);\n      if (!query) {\n        query = new Query({\n          client: client,\n          queryKey: queryKey,\n          queryHash: queryHash,\n          options: client.defaultQueryOptions(options),\n          state: state,\n          defaultOptions: client.getQueryDefaults(queryKey)\n        });\n        this.add(query);\n      }\n      return query;\n    }\n  }, {\n    key: \"add\",\n    value: function add(query) {\n      if (!_classPrivateFieldGet(_queries, this).has(query.queryHash)) {\n        _classPrivateFieldGet(_queries, this).set(query.queryHash, query);\n        this.notify({\n          type: \"added\",\n          query: query\n        });\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(query) {\n      var queryInMap = _classPrivateFieldGet(_queries, this).get(query.queryHash);\n      if (queryInMap) {\n        query.destroy();\n        if (queryInMap === query) {\n          _classPrivateFieldGet(_queries, this).delete(query.queryHash);\n        }\n        this.notify({\n          type: \"removed\",\n          query: query\n        });\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this2 = this;\n      notifyManager.batch(function () {\n        _this2.getAll().forEach(function (query) {\n          _this2.remove(query);\n        });\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function get(queryHash) {\n      return _classPrivateFieldGet(_queries, this).get(queryHash);\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      return _toConsumableArray(_classPrivateFieldGet(_queries, this).values());\n    }\n  }, {\n    key: \"find\",\n    value: function find(filters) {\n      var defaultedFilters = _objectSpread({\n        exact: true\n      }, filters);\n      return this.getAll().find(function (query) {\n        return matchQuery(defaultedFilters, query);\n      });\n    }\n  }, {\n    key: \"findAll\",\n    value: function findAll() {\n      var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var queries = this.getAll();\n      return Object.keys(filters).length > 0 ? queries.filter(function (query) {\n        return matchQuery(filters, query);\n      }) : queries;\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(event) {\n      var _this3 = this;\n      notifyManager.batch(function () {\n        _this3.listeners.forEach(function (listener) {\n          listener(event);\n        });\n      });\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      var _this4 = this;\n      notifyManager.batch(function () {\n        _this4.getAll().forEach(function (query) {\n          query.onFocus();\n        });\n      });\n    }\n  }, {\n    key: \"onOnline\",\n    value: function onOnline() {\n      var _this5 = this;\n      notifyManager.batch(function () {\n        _this5.getAll().forEach(function (query) {\n          query.onOnline();\n        });\n      });\n    }\n  }]);\n}(Subscribable));\nexport { QueryCache };","map":{"version":3,"names":["hashQueryKeyByOptions","matchQuery","Query","notifyManager","Subscribable","QueryCache","_queries","WeakMap","_Subscribable","_this","config","arguments","length","undefined","_classCallCheck","_callSuper","_classPrivateFieldInitSpec","_classPrivateFieldSet","Map","_inherits","_createClass","key","value","build","client","options","state","_options$queryHash","queryKey","queryHash","query","get","defaultQueryOptions","defaultOptions","getQueryDefaults","add","_classPrivateFieldGet","has","set","notify","type","remove","queryInMap","destroy","delete","clear","_this2","batch","getAll","forEach","_toConsumableArray","values","find","filters","defaultedFilters","_objectSpread","exact","findAll","queries","Object","keys","filter","event","_this3","listeners","listener","onFocus","_this4","onOnline","_this5"],"sources":["C:\\Users\\als40\\Desktop\\HandsMarket\\node_modules\\@tanstack\\query-core\\src\\queryCache.ts"],"sourcesContent":["import { hashQueryKeyByOptions, matchQuery } from './utils'\nimport { Query } from './query'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport type { QueryFilters } from './utils'\nimport type { Action, QueryState } from './query'\nimport type {\n  DefaultError,\n  NotifyEvent,\n  QueryKey,\n  QueryOptions,\n  WithRequired,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { QueryObserver } from './queryObserver'\n\n// TYPES\n\ninterface QueryCacheConfig {\n  onError?: (\n    error: DefaultError,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n  onSuccess?: (data: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n}\n\ninterface NotifyEventQueryAdded extends NotifyEvent {\n  type: 'added'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryRemoved extends NotifyEvent {\n  type: 'removed'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryUpdated extends NotifyEvent {\n  type: 'updated'\n  query: Query<any, any, any, any>\n  action: Action<any, any>\n}\n\ninterface NotifyEventQueryObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverResultsUpdated extends NotifyEvent {\n  type: 'observerResultsUpdated'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\nexport type QueryCacheNotifyEvent =\n  | NotifyEventQueryAdded\n  | NotifyEventQueryRemoved\n  | NotifyEventQueryUpdated\n  | NotifyEventQueryObserverAdded\n  | NotifyEventQueryObserverRemoved\n  | NotifyEventQueryObserverResultsUpdated\n  | NotifyEventQueryObserverOptionsUpdated\n\ntype QueryCacheListener = (event: QueryCacheNotifyEvent) => void\n\nexport interface QueryStore {\n  has: (queryHash: string) => boolean\n  set: (queryHash: string, query: Query) => void\n  get: (queryHash: string) => Query | undefined\n  delete: (queryHash: string) => void\n  values: () => IterableIterator<Query>\n}\n\n// CLASS\n\nexport class QueryCache extends Subscribable<QueryCacheListener> {\n  #queries: QueryStore\n\n  constructor(public config: QueryCacheConfig = {}) {\n    super()\n    this.#queries = new Map<string, Query>()\n  }\n\n  build<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    client: QueryClient,\n    options: WithRequired<\n      QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n    state?: QueryState<TData, TError>,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> {\n    const queryKey = options.queryKey\n    const queryHash =\n      options.queryHash ?? hashQueryKeyByOptions(queryKey, options)\n    let query = this.get<TQueryFnData, TError, TData, TQueryKey>(queryHash)\n\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n      })\n      this.add(query)\n    }\n\n    return query\n  }\n\n  add(query: Query<any, any, any, any>): void {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query)\n\n      this.notify({\n        type: 'added',\n        query,\n      })\n    }\n  }\n\n  remove(query: Query<any, any, any, any>): void {\n    const queryInMap = this.#queries.get(query.queryHash)\n\n    if (queryInMap) {\n      query.destroy()\n\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash)\n      }\n\n      this.notify({ type: 'removed', query })\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query)\n      })\n    })\n  }\n\n  get<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryHash: string,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> | undefined {\n    return this.#queries.get(queryHash) as\n      | Query<TQueryFnData, TError, TData, TQueryKey>\n      | undefined\n  }\n\n  getAll(): Array<Query> {\n    return [...this.#queries.values()]\n  }\n\n  find<TQueryFnData = unknown, TError = DefaultError, TData = TQueryFnData>(\n    filters: WithRequired<QueryFilters, 'queryKey'>,\n  ): Query<TQueryFnData, TError, TData> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.getAll().find((query) =>\n      matchQuery(defaultedFilters, query),\n    ) as Query<TQueryFnData, TError, TData> | undefined\n  }\n\n  findAll(filters: QueryFilters<any> = {}): Array<Query> {\n    const queries = this.getAll()\n    return Object.keys(filters).length > 0\n      ? queries.filter((query) => matchQuery(filters, query))\n      : queries\n  }\n\n  notify(event: QueryCacheNotifyEvent): void {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  onFocus(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus()\n      })\n    })\n  }\n\n  onOnline(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline()\n      })\n    })\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}