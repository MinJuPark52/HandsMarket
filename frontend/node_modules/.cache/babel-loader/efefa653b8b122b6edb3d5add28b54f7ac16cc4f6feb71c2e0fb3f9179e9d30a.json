{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _wrapNativeSuper from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport { util } from \"./helpers/util.js\";\nexport var ZodIssueCode = util.arrayToEnum([\"invalid_type\", \"invalid_literal\", \"custom\", \"invalid_union\", \"invalid_union_discriminator\", \"invalid_enum_value\", \"unrecognized_keys\", \"invalid_arguments\", \"invalid_return_type\", \"invalid_date\", \"invalid_string\", \"too_small\", \"too_big\", \"invalid_intersection_types\", \"not_multiple_of\", \"not_finite\"]);\nexport var quotelessJson = function quotelessJson(obj) {\n  var json = JSON.stringify(obj, null, 2);\n  return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport var ZodError = /*#__PURE__*/function (_Error) {\n  function ZodError(issues) {\n    var _this;\n    _classCallCheck(this, ZodError);\n    _this = _callSuper(this, ZodError);\n    _this.issues = [];\n    _this.addIssue = function (sub) {\n      _this.issues = [].concat(_toConsumableArray(_this.issues), [sub]);\n    };\n    _this.addIssues = function () {\n      var subs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      _this.issues = [].concat(_toConsumableArray(_this.issues), _toConsumableArray(subs));\n    };\n    var actualProto = (this instanceof ZodError ? this.constructor : void 0).prototype;\n    if (Object.setPrototypeOf) {\n      // eslint-disable-next-line ban/ban\n      Object.setPrototypeOf(_this, actualProto);\n    } else {\n      _this.__proto__ = actualProto;\n    }\n    _this.name = \"ZodError\";\n    _this.issues = issues;\n    return _this;\n  }\n  _inherits(ZodError, _Error);\n  return _createClass(ZodError, [{\n    key: \"errors\",\n    get: function get() {\n      return this.issues;\n    }\n  }, {\n    key: \"format\",\n    value: function format(_mapper) {\n      var mapper = _mapper || function (issue) {\n        return issue.message;\n      };\n      var fieldErrors = {\n        _errors: []\n      };\n      var _processError = function processError(error) {\n        var _iterator = _createForOfIteratorHelper(error.issues),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var issue = _step.value;\n            if (issue.code === \"invalid_union\") {\n              issue.unionErrors.map(_processError);\n            } else if (issue.code === \"invalid_return_type\") {\n              _processError(issue.returnTypeError);\n            } else if (issue.code === \"invalid_arguments\") {\n              _processError(issue.argumentsError);\n            } else if (issue.path.length === 0) {\n              fieldErrors._errors.push(mapper(issue));\n            } else {\n              var curr = fieldErrors;\n              var i = 0;\n              while (i < issue.path.length) {\n                var el = issue.path[i];\n                var terminal = i === issue.path.length - 1;\n                if (!terminal) {\n                  curr[el] = curr[el] || {\n                    _errors: []\n                  };\n                  // if (typeof el === \"string\") {\n                  //   curr[el] = curr[el] || { _errors: [] };\n                  // } else if (typeof el === \"number\") {\n                  //   const errorArray: any = [];\n                  //   errorArray._errors = [];\n                  //   curr[el] = curr[el] || errorArray;\n                  // }\n                } else {\n                  curr[el] = curr[el] || {\n                    _errors: []\n                  };\n                  curr[el]._errors.push(mapper(issue));\n                }\n                curr = curr[el];\n                i++;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      };\n      _processError(this);\n      return fieldErrors;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.message;\n    }\n  }, {\n    key: \"message\",\n    get: function get() {\n      return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.issues.length === 0;\n    }\n  }, {\n    key: \"flatten\",\n    value: function flatten() {\n      var mapper = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (issue) {\n        return issue.message;\n      };\n      var fieldErrors = {};\n      var formErrors = [];\n      var _iterator2 = _createForOfIteratorHelper(this.issues),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var sub = _step2.value;\n          if (sub.path.length > 0) {\n            fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n            fieldErrors[sub.path[0]].push(mapper(sub));\n          } else {\n            formErrors.push(mapper(sub));\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return {\n        formErrors: formErrors,\n        fieldErrors: fieldErrors\n      };\n    }\n  }, {\n    key: \"formErrors\",\n    get: function get() {\n      return this.flatten();\n    }\n  }], [{\n    key: \"assert\",\n    value: function assert(value) {\n      if (!(value instanceof ZodError)) {\n        throw new Error(\"Not a ZodError: \".concat(value));\n      }\n    }\n  }]);\n}(/*#__PURE__*/_wrapNativeSuper(Error));\nZodError.create = function (issues) {\n  var error = new ZodError(issues);\n  return error;\n};","map":{"version":3,"names":["util","ZodIssueCode","arrayToEnum","quotelessJson","obj","json","JSON","stringify","replace","ZodError","_Error","issues","_this","_classCallCheck","_callSuper","addIssue","sub","concat","_toConsumableArray","addIssues","subs","arguments","length","undefined","actualProto","constructor","prototype","Object","setPrototypeOf","__proto__","name","_inherits","_createClass","key","get","value","format","_mapper","mapper","issue","message","fieldErrors","_errors","processError","error","_iterator","_createForOfIteratorHelper","_step","s","n","done","code","unionErrors","map","returnTypeError","argumentsError","path","push","curr","i","el","terminal","err","e","f","toString","jsonStringifyReplacer","flatten","formErrors","_iterator2","_step2","assert","Error","_wrapNativeSuper","create"],"sources":["C:/Users/als40/Desktop/HandsMarket/node_modules/zod/dist/esm/v3/ZodError.js"],"sourcesContent":["import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}