{"ast":null,"code":"import _objectSpread from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/als40/Desktop/HandsMarket/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var $output = Symbol(\"ZodOutput\");\nexport var $input = Symbol(\"ZodInput\");\nexport var $ZodRegistry = /*#__PURE__*/function () {\n  function $ZodRegistry() {\n    _classCallCheck(this, $ZodRegistry);\n    this._map = new WeakMap();\n    this._idmap = new Map();\n  }\n  return _createClass($ZodRegistry, [{\n    key: \"add\",\n    value: function add(schema) {\n      var meta = arguments.length <= 1 ? undefined : arguments[1];\n      this._map.set(schema, meta);\n      if (meta && typeof meta === \"object\" && \"id\" in meta) {\n        if (this._idmap.has(meta.id)) {\n          throw new Error(\"ID \".concat(meta.id, \" already exists in the registry\"));\n        }\n        this._idmap.set(meta.id, schema);\n      }\n      return this;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(schema) {\n      this._map.delete(schema);\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(schema) {\n      // return this._map.get(schema) as any;\n      // inherit metadata\n      var p = schema._zod.parent;\n      if (p) {\n        var _this$get;\n        var pm = _objectSpread({}, (_this$get = this.get(p)) !== null && _this$get !== void 0 ? _this$get : {});\n        delete pm.id; // do not inherit id\n        return _objectSpread(_objectSpread({}, pm), this._map.get(schema));\n      }\n      return this._map.get(schema);\n    }\n  }, {\n    key: \"has\",\n    value: function has(schema) {\n      return this._map.has(schema);\n    }\n  }]);\n}();\n// registries\nexport function registry() {\n  return new $ZodRegistry();\n}\nexport var globalRegistry = /*@__PURE__*/registry();","map":{"version":3,"names":["$output","Symbol","$input","$ZodRegistry","_classCallCheck","_map","WeakMap","_idmap","Map","_createClass","key","value","add","schema","meta","arguments","length","undefined","set","has","id","Error","concat","remove","delete","get","p","_zod","parent","_this$get","pm","_objectSpread","registry","globalRegistry"],"sources":["C:/Users/als40/Desktop/HandsMarket/node_modules/zod/dist/esm/v4/core/registries.js"],"sourcesContent":["export const $output = Symbol(\"ZodOutput\");\nexport const $input = Symbol(\"ZodInput\");\nexport class $ZodRegistry {\n    constructor() {\n        this._map = new WeakMap();\n        this._idmap = new Map();\n    }\n    add(schema, ..._meta) {\n        const meta = _meta[0];\n        this._map.set(schema, meta);\n        if (meta && typeof meta === \"object\" && \"id\" in meta) {\n            if (this._idmap.has(meta.id)) {\n                throw new Error(`ID ${meta.id} already exists in the registry`);\n            }\n            this._idmap.set(meta.id, schema);\n        }\n        return this;\n    }\n    remove(schema) {\n        this._map.delete(schema);\n        return this;\n    }\n    get(schema) {\n        // return this._map.get(schema) as any;\n        // inherit metadata\n        const p = schema._zod.parent;\n        if (p) {\n            const pm = { ...(this.get(p) ?? {}) };\n            delete pm.id; // do not inherit id\n            return { ...pm, ...this._map.get(schema) };\n        }\n        return this._map.get(schema);\n    }\n    has(schema) {\n        return this._map.has(schema);\n    }\n}\n// registries\nexport function registry() {\n    return new $ZodRegistry();\n}\nexport const globalRegistry = /*@__PURE__*/ registry();\n"],"mappings":";;;AAAA,OAAO,IAAMA,OAAO,GAAGC,MAAM,CAAC,WAAW,CAAC;AAC1C,OAAO,IAAMC,MAAM,GAAGD,MAAM,CAAC,UAAU,CAAC;AACxC,WAAaE,YAAY;EACrB,SAAAA,aAAA,EAAc;IAAAC,eAAA,OAAAD,YAAA;IACV,IAAI,CAACE,IAAI,GAAG,IAAIC,OAAO,CAAC,CAAC;IACzB,IAAI,CAACC,MAAM,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC3B;EAAC,OAAAC,YAAA,CAAAN,YAAA;IAAAO,GAAA;IAAAC,KAAA,EACD,SAAAC,GAAGA,CAACC,MAAM,EAAY;MAClB,IAAMC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAC,SAAA,GAAAF,SAAA,GAAW;MACrB,IAAI,CAACV,IAAI,CAACa,GAAG,CAACL,MAAM,EAAEC,IAAI,CAAC;MAC3B,IAAIA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,IAAI,IAAIA,IAAI,EAAE;QAClD,IAAI,IAAI,CAACP,MAAM,CAACY,GAAG,CAACL,IAAI,CAACM,EAAE,CAAC,EAAE;UAC1B,MAAM,IAAIC,KAAK,OAAAC,MAAA,CAAOR,IAAI,CAACM,EAAE,oCAAiC,CAAC;QACnE;QACA,IAAI,CAACb,MAAM,CAACW,GAAG,CAACJ,IAAI,CAACM,EAAE,EAAEP,MAAM,CAAC;MACpC;MACA,OAAO,IAAI;IACf;EAAC;IAAAH,GAAA;IAAAC,KAAA,EACD,SAAAY,MAAMA,CAACV,MAAM,EAAE;MACX,IAAI,CAACR,IAAI,CAACmB,MAAM,CAACX,MAAM,CAAC;MACxB,OAAO,IAAI;IACf;EAAC;IAAAH,GAAA;IAAAC,KAAA,EACD,SAAAc,GAAGA,CAACZ,MAAM,EAAE;MACR;MACA;MACA,IAAMa,CAAC,GAAGb,MAAM,CAACc,IAAI,CAACC,MAAM;MAC5B,IAAIF,CAAC,EAAE;QAAA,IAAAG,SAAA;QACH,IAAMC,EAAE,GAAAC,aAAA,MAAAF,SAAA,GAAS,IAAI,CAACJ,GAAG,CAACC,CAAC,CAAC,cAAAG,SAAA,cAAAA,SAAA,GAAI,CAAC,CAAC,CAAG;QACrC,OAAOC,EAAE,CAACV,EAAE,CAAC,CAAC;QACd,OAAAW,aAAA,CAAAA,aAAA,KAAYD,EAAE,GAAK,IAAI,CAACzB,IAAI,CAACoB,GAAG,CAACZ,MAAM,CAAC;MAC5C;MACA,OAAO,IAAI,CAACR,IAAI,CAACoB,GAAG,CAACZ,MAAM,CAAC;IAChC;EAAC;IAAAH,GAAA;IAAAC,KAAA,EACD,SAAAQ,GAAGA,CAACN,MAAM,EAAE;MACR,OAAO,IAAI,CAACR,IAAI,CAACc,GAAG,CAACN,MAAM,CAAC;IAChC;EAAC;AAAA;AAEL;AACA,OAAO,SAASmB,QAAQA,CAAA,EAAG;EACvB,OAAO,IAAI7B,YAAY,CAAC,CAAC;AAC7B;AACA,OAAO,IAAM8B,cAAc,GAAG,aAAcD,QAAQ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}